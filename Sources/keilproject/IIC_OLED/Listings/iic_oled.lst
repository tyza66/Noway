C51 COMPILER V9.54   IIC_OLED                                                              08/08/2021 17:34:57 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IIC_OLED
OBJECT MODULE PLACED IN .\Objects\iic_oled.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE iic_oled.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\IIC_OLED) DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\iic_oled.lst) TABS(2) OBJECT(.\Objects\iic_oled.obj)

line level    source

   1          #include "iic_oled.h"
   2          #include "font.h"
   3          /**********************************************
   4          //IIC Start
   5          **********************************************/
   6          void IIC_Start()
   7          {
   8   1        OLED_SCL = 1;
   9   1        OLED_SDIN = 1;
  10   1        OLED_SDIN = 0;
  11   1        OLED_SCL = 0;
  12   1      }
  13          
  14          /**********************************************
  15          //IIC Stop
  16          **********************************************/
  17          void IIC_Stop()
  18          {
  19   1        OLED_SCL = 1 ;
  20   1        OLED_SDIN = 0;
  21   1        OLED_SDIN = 1;
  22   1      
  23   1      }
  24          
  25          void IIC_Wait_Ack()
  26          {
  27   1        OLED_SCL = 1 ;
  28   1        OLED_SCL = 0;
  29   1      }
  30          /**********************************************
  31          // IIC Write byte
  32          **********************************************/
  33          void Write_IIC_Byte(u8 IIC_Byte)
  34          {
  35   1        u8 i;
  36   1        u8 m, da;
  37   1        da = IIC_Byte;
  38   1        OLED_SCL = 0;
  39   1        for(i = 0; i < 8; i++)
  40   1        {
  41   2          m = da;
  42   2          m = m & 0x80;
  43   2          if(m == 0x80)
  44   2          {
  45   3            OLED_SDIN = 1;
  46   3          }
  47   2          else OLED_SDIN = 0;
  48   2          da = da << 1;
  49   2          OLED_SCL = 1;
  50   2          OLED_SCL = 0;
  51   2        }
  52   1      
  53   1      
  54   1      }
C51 COMPILER V9.54   IIC_OLED                                                              08/08/2021 17:34:57 PAGE 2   

  55          /**********************************************
  56          // IIC Write Command
  57          **********************************************/
  58          void Write_IIC_Command(u8 IIC_Command)
  59          {
  60   1        IIC_Start();
  61   1        Write_IIC_Byte(0x78);            //Slave address,SA0=0
  62   1        IIC_Wait_Ack();
  63   1        Write_IIC_Byte(0x00);     //write command
  64   1        IIC_Wait_Ack();
  65   1        Write_IIC_Byte(IIC_Command);
  66   1        IIC_Wait_Ack();
  67   1        IIC_Stop();
  68   1      }
  69          /**********************************************
  70          // IIC Write Data
  71          **********************************************/
  72          void Write_IIC_Data(u8 IIC_Data)
  73          {
  74   1        IIC_Start();
  75   1        Write_IIC_Byte(0x78);     //D/C#=0; R/W#=0
  76   1        IIC_Wait_Ack();
  77   1        Write_IIC_Byte(0x40);     //write data
  78   1        IIC_Wait_Ack();
  79   1        Write_IIC_Byte(IIC_Data);
  80   1        IIC_Wait_Ack();
  81   1        IIC_Stop();
  82   1      }
  83          void OLED_WR_Byte(unsigned dat, unsigned cmd)
  84          {
  85   1        if(cmd)
  86   1          Write_IIC_Data(dat);
  87   1        else
  88   1          Write_IIC_Command(dat);
  89   1      }
  90          
  91          //坐标设置
  92          void OLED_Set_Pos(u8 x, u8 y)
  93          {
  94   1        OLED_WR_Byte(0xb0 + y, 0);
  95   1        OLED_WR_Byte((((x + 2) & 0xf0) >> 4) | 0x10, 0);
  96   1        OLED_WR_Byte(((x + 2) & 0x0f), 0);
  97   1      }
  98          
  99          void OLED_Clear(void)
 100          {
 101   1        u8 m, n;
 102   1        for(m = 0; m < 8; m++)
 103   1        {
 104   2          OLED_WR_Byte(0xb0 + m, 0);    //page0-page1
 105   2          OLED_WR_Byte(0x00, 0);    //low column start address
 106   2          OLED_WR_Byte(0x10, 0);    //high column start address
 107   2          for(n = 0; n < 128; n++)
 108   2          {
 109   3            OLED_WR_Byte(0x00, 1);
 110   3          }
 111   2        }
 112   1      }
 113          
 114          //在指定位置显示一个字符,包括部分字符
 115          //x:0~127
 116          //y:0~63
C51 COMPILER V9.54   IIC_OLED                                                              08/08/2021 17:34:57 PAGE 3   

 117          void OLED_ShowChar(u8 x, u8 y, u8 chr)
 118          {
 119   1        u8 c = 0, i = 0;
 120   1        c = chr - ' '; //得到偏移后的值
 121   1        if(x > Max_Column - 1)
 122   1        {
 123   2          x = 0;
 124   2          y = y + 2;
 125   2        }
 126   1        OLED_Set_Pos(x, y);
 127   1        for(i = 0; i < 8; i++)
 128   1          OLED_WR_Byte(zf[c * 16 + i], 1);
 129   1        OLED_Set_Pos(x, y + 1);
 130   1        for(i = 0; i < 8; i++)
 131   1          OLED_WR_Byte(zf[c * 16 + i + 8], 1);
 132   1      
 133   1      }
 134          //m^n函数
 135          u32 oled_pow(u8 m, u8 n)
 136          {
 137   1        u32 result = 1;
 138   1        while(n--)result *= m;
 139   1        return result;
 140   1      }
 141          //显示数字
 142          //x,y :起点坐标
 143          //len :数字的位数
 144          //num:数值(0~4294967295)
 145          //mode:显示格式：为0，当要显示的最高位为0时显示时，显示空格，为1，当要显示的最高位为0时显示时，显示0
 146          void OLED_ShowNum(u8 x, u8 y, u32 num, u8 len, u8 mode)
 147          {
 148   1        u8 t, temp;
 149   1        u8 enshow = 0;
 150   1        for(t = 0; t < len; t++)
 151   1        {
 152   2          temp = (num / oled_pow(10, len - t - 1)) % 10;
 153   2          if(enshow == 0 && t < (len - 1))
 154   2          {
 155   3            if(temp == 0)
 156   3            {
 157   4              if(mode == 0)
 158   4                OLED_ShowChar(x + 8 * t, y, ' ');
 159   4              else
 160   4                OLED_ShowChar(x + 8 * t, y, '0');
 161   4              continue;
 162   4            }
 163   3            else enshow = 1;
 164   3          }
 165   2          OLED_ShowChar(x + 8 * t, y, temp + '0');
 166   2        }
 167   1      }
 168          
 169          //初始化SSD1306
 170          void OLED_Init(void)
 171          {
 172   1        OLED_WR_Byte(0xAE, 0); //--display off
 173   1        OLED_WR_Byte(0x00, 0); //---set low column address
 174   1        OLED_WR_Byte(0x10, 0); //---set high column address
 175   1        OLED_WR_Byte(0x40, 0); //--set start line address
 176   1        OLED_WR_Byte(0xB0, 0); //--set page address
 177   1        OLED_WR_Byte(0x81, 0); // contract control
 178   1        OLED_WR_Byte(0xFF, 0); //--128
C51 COMPILER V9.54   IIC_OLED                                                              08/08/2021 17:34:57 PAGE 4   

 179   1        OLED_WR_Byte(0xA1, 0); //set segment remap
 180   1        OLED_WR_Byte(0xA6, 0); //--normal / reverse
 181   1        OLED_WR_Byte(0xA8, 0); //--set multiplex ratio(1 to 64)
 182   1        OLED_WR_Byte(0x3F, 0); //--1/32 duty
 183   1        OLED_WR_Byte(0xC8, 0); //Com scan direction
 184   1        OLED_WR_Byte(0xD3, 0); //-set display offset
 185   1        OLED_WR_Byte(0x00, 0); //
 186   1      
 187   1        OLED_WR_Byte(0xD5, 0); //set osc division
 188   1        OLED_WR_Byte(0x80, 0); //
 189   1      
 190   1        OLED_WR_Byte(0xD8, 0); //set area color mode off
 191   1        OLED_WR_Byte(0x05, 0); //
 192   1      
 193   1        OLED_WR_Byte(0xD9, 0); //Set Pre-Charge Period
 194   1        OLED_WR_Byte(0xF1, 0); //
 195   1      
 196   1        OLED_WR_Byte(0xDA, 0); //set com pin configuartion
 197   1        OLED_WR_Byte(0x12, 0); //
 198   1      
 199   1        OLED_WR_Byte(0xDB, 0); //set Vcomh
 200   1        OLED_WR_Byte(0x30, 0); //
 201   1      
 202   1        OLED_WR_Byte(0x8D, 0); //set charge pump enable
 203   1        OLED_WR_Byte(0x14, 0); //
 204   1      
 205   1        OLED_WR_Byte(0xAF, 0); //--turn on oled panel
 206   1      }
 207          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    876    ----
   CONSTANT SIZE    =   1520    ----
   XDATA SIZE       =   ----      21
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
